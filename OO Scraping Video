describe Animal do
  context 'properties' do 
  
  it 'has a name' do 
  animal = Animal.new
  animal.name = "Name"
  expect(animal.name).to eq("Name")
  end
  
  it 'has a kingdom' do
  animal = Animal.new
  animal.kingdom = "Kingdom"
  expect(animal.kingdom).to eq(:Kingdom")
  end
  
  it 'has a phylum' do
  animal = Animal.new
  animal.phylum = "Phylum"
  expect(animal.phylum).to eq("Phylum")
  end
  
  it 'has a klass' do
  animal = Animal.new
  animal.klass = "klass"
  expect(animal.klass).to eq("Klass")
  end
  
  it 'has a order' do
  animal = Animal.new
  animal.order = "order"
  expect(animal.order).to eq("Order")
  end
  
  it 'has a family' do
  animal = Animal.new
  animal.family = "family"
  expect(animal.family).to eq("Family")
  end
  
  it 'has a genus' do
  animal = Animal.new
  animal.genus = "genus"
  expect(animal.genus).to eq("Genus")
  end
  
  it 'has a species' do
  animal = Animal.new
  animal.species = "species"
  expect(animal.species).to eq("Species)
  end
   
class animal
  attr_accessor :name, :kingdom, :phylum, :klass, :order, :family, :genus, :species 
    @@all = []
    
    #HOOKS
    def initialize
      @@all << self
    end
    
    # self.all - Class Method, class Getter
    def self.all
      @@all
    end
    
    
    
    
    
      

end
  
